#Credits
Video -> Appbrewery
Documentation -> https://www.w3schools.com/sql

C-CREATE
R-READ
U-UPDATE
D-DESTROY

#PART-01
#Create products table

CREATE TABLE products{
    id INT NOT NULL,
    name STRING,
    price MONEY
    PRIMARY KEY (id);
}

#To Insert in the table
INSERT INTO products 
VALUES(1,"PEN",1.20)

#To Print
SELECT * FROM 'products';

#To Insert in particular column.
INSERT INTO products (id,name)
VALUES(2,"PENCIL")


#PART-02
#READ
SELECT * FROM 'products';

#For particular column

SELECT name, price FROM 'products';

#For particular row (Use 'WHERE')

#NOTE: || MEANS OR

SELECT * FROM 'products' WHERE id = 1 (id > 1 || id < 2 || id >= 1 || id <= 2);


#PART-03(USING 'UPDATE')

UPDATE
SET PRICE = 3
WHERE id = 2; //IMPORTANT STATEMENT.

#Add new column;
ALTER TABLE products
ADD stock INT

UPDATE
SET stock = 200
WHERE id = 1;
&
UPDATE
SET stock = 100
WHERE id = 2;

#PART-04(using 'DELETE')
DELETE FROM products
WHERE id = 2;

#PART-05(relationships.)
#Let us add the id = 2 again!
INSERT INTO products
VALUES(2,"PENCIL",3,100);

#Creating customers table
CREATE TABLE customers{
    id INT NOT NULL,
    first_name STRING,
    last_name STRING,
    address STRING
}

INSERT INTO customers
VALUES(1,"Steve","Rogers","USA");

#again
INSERT INTO customers
VALUES(2,"Dustin","Henderson","Hawkins");


#Creating orders table(using "FOREIGN KEY")
CREATE TABLE orders{
    id INT NOT NULL,
    order_number INT;
    customer_id INT;
    product_id INT;
    PRIMARY KEY(id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY(product_id) REFERENCES products(id)
}

INSERT INTO orders
VALUES(1,1920,1,1); 

#Let us now join the customer and orders table
SELECT orders.order_number, customers.first_name, customers.last_name, customers.address
FROM orders
INNER JOIN customers ON orders.customer_id = customers.id;

#Challenge: Join orders and products table.

SELECT orders.order_number, products.name, products.price, products.stock
FROM orders
INNER JOIN products ON orders.product_id = products.id;